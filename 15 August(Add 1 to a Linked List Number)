#User function Template for python3

'''

class Node:
    def __init__(self, data):   # data -> value stored in node
        self.data = data
        self.next = None
'''

class Solution:
    def addOne(self,head):
        #Returns new head of linked List.
        # Helper function to reverse the linked list
        def reverse_linked_list(node):
            prev = None
            current = node
            while current:
                next_node = current.next
                current.next = prev
                prev = current
                current = next_node
            return prev
        
        # Reverse the linked list
        head = reverse_linked_list(head)
        
        # Add one to the reversed linked list
        carry = 1
        current = head
        while current and carry:
            current.data += carry
            if current.data == 10:
                current.data = 0
                carry = 1
            else:
                carry = 0
            current = current.next
        
        # If there's still a carry, we need to add a new node
        if carry:
            new_node = Node(1)
            current = head
            while current.next:
                current = current.next
            current.next = new_node
        
        # Reverse the linked list again to restore original order
        head = reverse_linked_list(head)
        
        return head
