class Solution:
    def findSwapValues(self,a, n, b, m):
        # Your code goes here
        sum_a = sum(a)
        sum_b = sum(b)
        # Check if the difference between the sums is even
        if (sum_a - sum_b) % 2 != 0:
            return -1
        # Calculate half of the difference between the sums
        diff = (sum_a - sum_b) // 2
        # Sort both arrays
        a.sort()
        b.sort()
        # Use two pointers to find a pair of elements that differ by half of the difference between the sums
        i = j = 0
        while i < n and j < m:
            if a[i] - b[j] == diff:
                return 1
            elif a[i] - b[j] < diff:
                i += 1
            else:
                j += 1
        return -1


#{ 
 # Driver Code Starts
if __name__ == '__main__': 
    
    
    t=int(input())
    for _ in range(0,t):
        l=list(map(int,input().split()))
        n=l[0]
        m=l[1]
        a = list(map(int,input().split()))
        b = list(map(int, input().split()))
        ob = Solution()
        print(ob.findSwapValues(a,n,b,m))
# } Driver Code Ends
